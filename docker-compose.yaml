version: '3.4'
services:
  front:
    image: node:alpine
    container_name: app
    entrypoint: /bin/sh
    build:
      context: ./
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - 80:80
    volumes:
     - ./app:/srv/app
    tty: true
    depends_on:
      - back
  back:
    container_name: backend
    build:
      args:
        - NODE_ENV=prod
        - DBUSERNAME=${DBUSERNAME}
        - PASSWORD=${PASSWORD}
        - DATABASE=${DATABASE}
        - HOSTNAME=${HOSTNAME}
        - DATABASE_PORT=${DATABASE_PORT}
        - SECRET=${SECRET}
        - MY_PASSWORD=${MY_PASSWORD}
      context: ../back
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=prod
      - DBUSERNAME=${DBUSERNAME}
      - PASSWORD=${PASSWORD}
      - DATABASE=${DATABASE}
      - HOSTNAME=${HOSTNAME}
      - DATABASE_PORT=${DATABASE_PORT}
      - SECRET=${SECRET}
      - MY_PASSWORD=${MY_PASSWORD}
    volumes:
      - uploads:/public/uploads
    depends_on:
      - database
  database:
    image: postgres:15.3-alpine
    volumes:
      - database:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${PASSWORD}
volumes:
  database:
  uploads: