version: '3.4'
services:
  front:
    container_name: app
    build:
      context: ./
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./app:/srv/app
      - ./dhparam:/etc/nginx/dhparam
      - ./certbot/conf/:/etc/nginx/ssl/
      - ./certbot/data:/usr/share/nginx/html/letsencrypt
    tty: true
    depends_on:
      - certbot
  certbot:
    image: certbot/certbot:latest
    command: certonly --webroot --webroot-path=/usr/share/nginx/html/letsencrypt --email rodrigo.facury14@gmail.com --agree-tos --no-eff-email -d startrail.com.br
    volumes:
      - ./certbot/conf/:/etc/letsencrypt
      - ./certbot/logs/:/var/log/letsencrypt
      - ./certbot/data:/usr/share/nginx/html/letsencrypt
    depends_on:
      - back
  back:
    container_name: backend
    build:
      args:
        - NODE_ENV=prod
        - DBUSERNAME=${DBUSERNAME}
        - PASSWORD=${PASSWORD}
        - DATABASE=${DATABASE}
        - HOSTNAME=${HOSTNAME}
        - DATABASE_PORT=${DATABASE_PORT}
        - SECRET=${SECRET}
      context: ../back
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=prod
      - DBUSERNAME=${DBUSERNAME}
      - PASSWORD=${PASSWORD}
      - DATABASE=${DATABASE}
      - HOSTNAME=${HOSTNAME}
      - DATABASE_PORT=${DATABASE_PORT}
      - SECRET=${SECRET}
    volumes:
      - uploads:/public/uploads
    depends_on:
      - database
  database:
    image: postgres:15.3-alpine
    volumes:
      - database:/var/lib/postgresql/data
    restart: on-failure
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${PASSWORD}
volumes:
  database:
  uploads: